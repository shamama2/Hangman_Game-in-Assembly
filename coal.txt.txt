INCLUDE Irvine32.inc

.data

success byte "Successfully matched the letters",0
random_index dword ?
index dword ?
temp_array byte 10 dup(?)
input byte 5 dup (?)
msg byte "Enter missing letter in the word",0 
position dword 5 dup(?)
loop_val dword ?
store_val byte 10 dup(?)
count dword ?
temp dword ?
WORD_LENGTH DWORD ?
t dword ?
half_word_length dword ?

string byte '^mizzly,'
       byte '^summerX,'
	   byte '^hellosX,'
	   byte '^acinusX,'
       byte '^ackees,'
       byte '^acnodeX,'
	   byte '^acornsX,'
	   byte '^acquit,'
	   byte '^acrossX,'
	   byte '^acting,'
	   byte '^actins,'
	   byte '^action,' 
	   byte '^yamalkas,'
	   byte '^yammered,'
	   byte '^yammererxx,',0 
	   byte '^ability,'
byte '^absence,'
byte '^academy,'
byte '^account,'
byte '^achieve,'
byte '^acquire,'
byte '^address,'
byte '^advance,'
byte '^advised,'
byte '^against,'
byte '^airport,'
byte '^already,'
byte '^ancient,'
byte '^another,'
byte '^anybody,'
byte '^balance,'
byte '^barrier,'
byte '^battery,'
byte '^because,'
byte '^bedroom,'
byte '^believe,'
byte '^beneath,'
byte '^benefit,'
byte '^besides,'
byte '^between,'
byte '^billion,'
byte '^binding,'
byte '^brother,'
byte '^brought,'
byte '^cabinet,'
byte '^caliber,'
byte '^capable,'
byte '^capital,'
byte '^captain,'
byte '^caption,'
byte '^capture,'
byte '^careful,'
byte '^carrier,'
byte '^caution,'
byte '^central,'
byte '^college,'
byte '^control,'
byte '^country,'
byte '^decline,'
byte '^default,'
byte '^defence,'
byte '^deficit,'
byte '^deliver,'
byte '^density,'
byte '^deposit,'
byte '^desktop,'
byte '^despite,'
byte '^destroy,'
byte '^develop,'
byte '^discuss,'
byte '^disease,'
byte '^display,'
byte '^dispute,'
byte '^distant,'
byte '^economy,'
byte '^edition,'
byte '^element,'
byte '^enhance,'
byte '^essence,'
byte '^expense,'
byte '^explain,'
byte '^explore,'
byte '^express,'
byte '^extreme,'
byte '^factory,'
byte '^faculty,'
byte '^failure,'
byte '^fashion,'
byte '^feature,'
byte '^federal,'
byte '^fiction,'
byte '^fifteen,'
byte '^finance,'
byte '^foreign,'
byte '^forever,'
byte '^gallery,'
byte '^gateway,'
byte '^general,'
byte '^genetic,'
byte '^genuine,'
byte '^greater,'
byte '^helpful,'
byte '^herself,'
byte '^highway,'
byte '^himself,'
byte '^history,'
byte '^holiday,'
byte '^however,'
byte '^illegal,'
byte '^imagine,'
byte '^improve,'
byte '^include,'
byte '^initial,'
byte '^insight,'
byte '^install,'
byte '^involve,'
byte '^journal,'
byte '^journey,'
byte '^justice,'
byte '^justify,'
byte '^kingdom,'
byte '^kitchen,'
byte '^leisure,'
byte '^liberal,'
byte '^liberty,'
byte '^library,'
byte '^license,'
byte '^machine,'
byte '^manager,'
byte '^married,'
byte '^massive,'
byte '^maximum,'
byte '^mission,'
byte '^natural,'
byte '^nervous,'
byte '^network,'
byte '^neutral,'
byte '^nowhere,'
byte '^obvious,'
byte '^offense,'
byte '^officer,'
byte '^outdoor,'
byte '^outside,'
byte '^overall,'
byte '^package,'
byte '^partial,'
byte '^partner,'
byte '^passage,'
byte '^passion,'
byte '^passive,'
byte '^perfect,'
byte '^perform,'
byte '^quality,'
byte '^quarter,'
byte '^respect,'
byte '^restore,'
byte '^reverse,'
byte '^routine,'
byte '^silence,'
byte '^storage,'
byte '^student,'
byte '^success,'
byte '^support,'
byte '^traffic,'
byte '^trouble,'
byte '^typical,'
byte '^uniform,'
byte '^upgrade,'
byte '^utility,'
byte '^village,'
byte '^violent,'
byte '^virtual,'
byte '^visible,'
byte '^without,'
byte '^witness,'
byte '^actually,'
byte '^addition,'
byte '^adjusted,'
byte '^advanced,'
byte '^advisory,'
byte '^advocate,'
byte '^approach,'
byte '^approval,'
byte '^argument,'
byte '^artistic,'
byte '^assembly,'
byte '^ttitude,'
byte '^audience,'
byte '^bacteria,'
byte '^baseball,'
byte '^birthday,'
byte '^boundary,'
byte '^building,'
byte '^business,'
byte '^clinical,'
byte '^consider,'
byte '^continue,'
byte '^creation,'
byte '^creative,'
byte '^cultural,'
byte '^customer,'
byte '^database,'
byte '^daughter,'
byte '^decrease,'
byte '^definite,'
byte '^describe,'
byte '^dialogue,'
byte '^equality,'
byte '^everyday,'
byte '^everyone,'
byte '^exchange,'
byte '^exercise,'
byte '^external,'
byte '^feedback,'
byte '^festival,'
byte '^football,'
byte '^fourteen,'
byte '^fraction,'
byte '^frequent,'
byte '^function,'
byte '^governor,'
byte '^graduate,'
byte '^graphics,'
byte '^grateful,'
byte '^guardian,'
byte '^guidance,'
byte '^hardware,'
byte '^heritage,'
byte '^highland,'
byte '^historic,'
byte '^homepage,'
byte '^hospital,'
byte '^humanity,'
byte '^innocent,'
byte '^interact,'
byte '^interest,'
byte '^interior,'
byte '^internal,'
byte '^interval,'
byte '^judgment,'
byte '^judicial,'
byte '^junction,'
byte '^keyboard,'
byte '^landlord,'
byte '^language,'
byte '^laughter,'
byte '^lifetime,'
byte '^likewise,'
byte '^literary,'
byte '^location,'
byte '^maintain,'
byte '^majority,'
byte '^marginal,'
byte '^medicine,'
byte '^midnight,'
byte '^movement,'
byte '^multiple,'
byte '^national,'
byte '^negative,'
byte '^nineteen,'
byte '^northern,'
byte '^notebook,'
byte '^numerous,'
byte '^observer,'
byte '^occasion,'
byte '^operator,'
byte '^opponent,'
byte '^opposite,'
byte '^optional,'
byte '^position,'
byte '^positive,'
byte '^possible,'
byte '^presence,'
byte '^pressure,'
byte '^previous,'
byte '^priority,'
byte '^property,'
byte '^quantity,'
byte '^question,'
byte '^reaction,'
byte '^religion,'
byte '^research,'
byte '^resource,'
byte '^response,'
byte '^revision,'
byte '^schedule,'
byte '^security,'
byte '^software,'
byte '^solution,'
byte '^somebody,'
byte '^surprise,'
byte '^tactical,'
byte '^takeover,'
byte '^together,'
byte '^tomorrow,'
byte '^transfer,'
byte '^triangle,'
byte '^ultimate,'
byte '^umbrella,'
byte '^universe,'
byte '^unlawful,'
byte '^unlikely,'
byte '^valuable,'
byte '^variable,'
byte '^vertical,'
byte '^victoria,'
byte '^violence,'
byte '^volatile,'
byte '^warranty,'
byte '^whatever,'
byte '^wildlife,'
byte '^wireless,'
byte '^withdraw,'
byte '^workshop,'
byte '^yourself,'
Byte '^razzmatazz,'
Byte '^bumfuzzled,'
Byte '^bumfuzzles,'
Byte '^whizzbangs,'
Byte '^bemuzzling,'
Byte '^puzzlingly,'
Byte '^unpuzzling,'
Byte '^embezzling,'
Byte '^unmuzzling,'
Byte '^zigzagging,'
Byte '^puzzlement,'
Byte '^scuzzballs,'
Byte '^dizzyingly,'
Byte '^blackjacks,'
Byte '^blizzardly,'
Byte '^bedazzling,'
Byte '^dazzlingly,'
Byte '^pozzolanic,'
Byte '^crackajack,'
Byte '^showbizzes,'
Byte '^mizzenmast,'
Byte '^kolkhoznik,'
Byte '^schnozzles,'
Byte '^skyjacking,'
Byte '^embezzlers,'
Byte '^jackknifed,'
Byte '^jackknives,'
Byte '^kibbutznik,'
Byte '^japanizing,'
Byte '^sorosises,'
Byte '^toastiest,'
Byte '^titterers,'
Byte '^tortoises,'
Byte '^terrorise,'
Byte '^sitarists,'
Byte '^testators,'
Byte '^aerostats,'
Byte '^terrorist,'
Byte '^troostite,'
Byte '^esterases,'
Byte '^jarovizin,'
Byte '^cheapjacks,'
Byte '^equivoques,'
Byte '^lumberjack,'
Byte '^zigzaggers,'
Byte '^supplejack,'
Byte '^knickknack,'
Byte '^kickboxing,'
Byte '^podzolized,'
Byte '^mezzalunas,'
Byte '^jackknifes,'
Byte '^jackhammer,'
Byte '^pozzolanas,'
Byte '^highjacked,'
Byte '^mozzarella,'
Byte '^squeezable,'
Byte '^applejacks,'
Byte '^bejumbling,'
Byte '^zombifying,'
Byte '^quantizing,'
Byte '^smokejacks,'
Byte '^podzolizes,'
Byte '^schizziest,'
Byte '^quincunxes,'
Byte '^zygomorphy,'
Byte '^equalizing,'
Byte '^mezzanines,'
Byte '^joypopping,'
Byte '^quartzitic,'
Byte '^oxygenized,'
Byte '^muckamucks,'
Byte '^frizziness,'
Byte '^maximizers,'
Byte '^sjamboking,'
Byte '^frizzliest,'
Byte '^intermezzo,'
Byte '^intermezzi,'
Byte '^liquidized,'
Byte '^quadplexes,'
Byte '^jacqueries,'
Byte '^quillbacks,'
Byte '^complexify,'
Byte '^amberjacks,'
Byte '^jargonized,'
Byte '^exchequers,'
Byte '^jaywalking,'
Byte '^blackbucks,'
Byte '^exorcizing,'
Byte '^jeopardize,'
Byte '^exoenzymes,'
Byte '^subjacency,'
Byte '^jackscrews,'
Byte '^jackrabbit,'
Byte '^johnnycake,'
Byte '^carjacking,'
Byte '^kibbitzing,'
Byte '^mezzotints,'
Byte '^chiffchaff,'
Byte '^outdazzled,'
Byte '^zinkifying,'
Byte '^skyjackers,'
Byte '^quizmaster,'
Byte '^backchecks,'
Byte '^epoxidized,'
Byte '^flummoxing,'
Byte '^jackplanes,'
Byte '^czarevitch,'
Byte '^jacklights,'
Byte '^oxidizable,'
Byte '^circumflex,'
Byte '^pizzazzes,'
Byte '^quizzical,'
Byte '^bumfuzzle,'
Byte '^whizzbang,'
Byte '^showbizzy,'
Byte '^buzzingly,'
Byte '^jazziness,'
Byte '^chazzenim,'
Byte '^chazzanim,'
Byte '^bemuzzled,'
Byte '^scuzzball,'
Byte '^zugzwangs,'
Byte '^blackjack,'
Byte '^puzzledly,'
Byte '^bemuzzles,'
Byte '^unpuzzled,'
Byte '^embezzled,'
Byte '^pizzalike,'
Byte '^unmuzzled,'
Byte '^huzzahing,'
Byte '^buzzwords,'
Byte '^frizzling,'
Byte '^unpuzzles,'
Byte '^embezzles,'
Byte '^schnozzle,'
Byte '^unmuzzles,'
Byte '^zigzagged,'
Byte '^blizzardy,'
Byte '^swizzling,'
Byte '^frazzling,'
Byte '^embezzler,'
Byte '^zigzagger,'
Byte '^mezzaluna,'
Byte '^equivoque,'
Byte '^bedazzled,'
Byte '^jipijapas,'
Byte '^schnozzes,'
Byte '^jackknife,'
Byte '^cheapjack,'
Byte '^jukeboxes,'
Byte '^pizzicati,'
Byte '^pizzicato,'
Byte '^grizzling,'
Byte '^paparazzi,'
Byte '^paparazzo,'
Byte '^maximized,'
Byte '^schizzier,'
Byte '^pozzolans,'
Byte '^krummholz,'
Byte '^jarovized,'
Byte '^podzolize,'
Byte '^pozzolana,'
Byte '^kibbutzim,'
Byte '^fuzztones,'
Byte '^pizzelles,'
Byte '^whizziest,'
Byte '^fuzziness,'
Byte '^applejack,'
Byte '^razzberry,'
Byte '^jampacked,'
Byte '^smokejack,'
Byte '^drizzling,'
Byte '^muzziness,'
Byte '^skipjacks,'
Byte '^blizzards,'
Byte '^skyjacked,'
Byte '^banjaxing,'
Byte '^bedazzles,'
Byte '^jacquards,'
Byte '^flapjacks,'
Byte '^mezzanine,'
Byte '^japanized,'
Byte '^blackbuck,'
Byte '^mezzotint,'
Byte '^swizzlers,'
Byte '^mezquites,'
Byte '^oxazepams,'
Byte '^frizzlier,'
Byte '^backcheck,'
Byte '^zabajones,'
Byte '^kickboxed,'
Byte '^squeezing,'
Byte '^frizzlers,'
Byte '^quillback,'
Byte '^zwiebacks,'
Byte '^ozonizing,'
Byte '^scuzziest,'
Byte '^exchequer,'
Byte '^muckamuck,'
Byte '^coxcombic,'
Byte '^highjacks,'
Byte '^jacquerie,'
Byte '^maximizer,'
Byte '^jarovizes,'
Byte '^maximizes,'
Byte '^skyjacker,'
Byte '^jackscrew,'
Byte '^jumpingly,'
Byte '^albizzias,'
Byte '^exoenzyme,'
Byte '^attesters,'
Byte '^irritator,'
Byte '^attestors,'
Byte '^reiterate,'
Byte '^satieties,'
Byte '^irritates,'
Byte '^straitest,'
Byte '^assessors,'
Byte '^assisters,'
Byte '^assistors,'
Byte '^assorters,'
Byte '^satirises,'
Byte '^satirists,'
Byte '^reassorts,'
Byte '^reasserts,'
Byte '^sestertia,'
Byte '^rearrests,'
Byte '^seeresses,'
Byte '^teataster,'
Byte '^traitress,'
Byte '^tattooers,'
Byte '^tressiest,'
Byte '^tattooist,'
Byte '^assertors,'
Byte '^asserters,'
Byte '^trattorie,'
Byte '^retorters,'
Byte '^retreater,'
Byte '^resistors,'
Byte '^resisters,'
Byte '^trattoria,'
Byte '^ostosises,'
Byte '^restorers,'
Byte '^orrisroot,'
Byte '^ostiaries,'
Byte '^resorters,'
Byte '^stressors,'
Byte '^arrestees,'
Byte '^rotatores,'
Byte '^oratorios,'
Byte '^oratories,'
Byte '^treatises,'
Byte '^roseroots,'
Byte '^roisterer,'
Byte '^arresters,'
Byte '^arrestors,'
Byte '^resetters,'
Byte '^arteritis,'
Byte '^steatites,'
Byte '^tartrates,'
Byte '^sororates,'
Byte '^titrators,'
Byte '^totterers,'
Byte '^starriest,'
Byte '^stearates,'
Byte '^antistate,'
Byte '^titanates,'
Byte '^interests,'
Byte '^tolerator,'
Byte '^narraters,'
Byte '^tiltrotor,'
Byte '^insisters,'
Byte '^intarsias,'
Byte '^interiors,'
Byte '^antistats,'
Byte '^irritated,'
Byte '^toilettes,'
Byte '^reseasons,'
Byte '^irateness,'
Byte '^toadeater,'
Byte '^irritants,'
Byte '^insetters,'
Byte '^tolerates,'
Byte '^irradiate,'
Byte '^intestate,'
Byte '^titanites,'
Byte '^titration,'
Byte '^interties,'
Byte '^resettles,'
Byte '^resonator,'
Byte '^totalists,'
Byte '^resonates,'
Byte '^totalises,'
Byte '^torturers,'
Byte '^stutterer,'
Byte '^strutters,'
Byte '^adroitest,'
Byte '^restorals,'
Byte '^touristas,',0 ;616



.code
main proc


mov eax,lengthof string
mov ebx,616
mul ebx
call randomize
call randomrange
;call writeint
mov random_index,eax
mov esi, random_index

lab:cmp string[esi],'^'
je stop
dec esi
jmp lab


;mov edx,offset string+7
;call writestring

stop :
;call crlf
mov eax,esi
;call writeint
;call crlf
mov index,esi
;index having starting index of some random word

mov edi,0
mov ebx,index

Fetch_word:

inc ebx
cmp string[ebx],','
je word_fetched
mov al,string[ebx]
mov temp_array[edi],al
inc edi
jmp Fetch_word

word_fetched:

MOV word_length,edi
mov edx,offset temp_array
call writestring
call crlf
call crlf

;finding half of length of word

mov edx,0
mov eax,word_length
;CALL CRLF
;CALL WRITEINT
;CALL CRLF
mov ebx,2   ;;to get half length
div ebx

mov half_word_length,eax
mov  ecx,eax
mov loop_val,ecx  ;loopval contains no of guesses
;call dumpregs
mov esi,0

;generating random numbers for random spaces

call randomize

l:
mov eax,word_length
call randomrange
;call writeint
mov position[esi],eax
add esi,4
loop l

;call crlf

;checking wether random numbers are equal

CMP WORD_LENGTH,6
JE SIX_LETTER_WORDS
cmp WORD_LENGTH,7
JE SEVEN_LETTER_WORDS
cmp WORD_LENGTH,8
JE EIGHT_LETTER_WORDS
cmp WORD_LENGTH,9
JE NINE_LETTER_WORDS
cmp WORD_LENGTH,10
JE TEN_LETTER_WORDS



SIX_LETTER_WORDS:


;case1:comparing first 2 if equal

checking:
mov esi,0
mov ebx,position[esi]
add esi,4
cmp ebx,position[esi]
je random_again
jmp checking2

;jmp terminate

random_again:
mov eax,WORD_LENGTH
call randomrange
mov position[esi],eax
jmp checking



;case2:comparing last 2 if same

checking2:
mov esi, 4
mov ebx,position[esi]  ;second last val
add esi, 4
cmp ebx,position[esi]  ;last val
je random_again
jmp checking3


checking3:

mov esi,0
mov ebx,position[esi]   ;first
add esi,8
cmp ebx,position[esi]   ;last
je random_again
jmp terminate

terminate:

display:
mov ecx,half_word_length
mov esi,0
call crlf

l1:
mov eax,position[esi]
;call writeint
add esi,4
loop l1
JMP NEXT

SEVEN_LETTER_WORDS:
JMP SIX_LETTER_WORDS


EIGHT_LETTER_WORDS:
;case1:comparing first two if equal
checking1:
mov esi,0
mov ebx,position[esi]
add esi,4
cmp ebx,position[esi]
je random_again1
jmp checking21

random_again1:
mov eax,lengthof string 
call randomrange
mov position[esi],eax
jmp checking1

;case2:comparing last 2 if same

checking21:
mov esi, 0
mov ebx, position[esi] ;first
add esi, 8
cmp ebx, position[esi] ;third
je random_again1
jmp checking31


checking31:

mov esi,0
mov ebx,position[esi]   ;first
add esi, 12
cmp ebx,position[esi]   ;fourth
je random_again1
jmp checking41

checking41:

mov esi, 4
mov ebx, position[esi] ;second
add esi, 4
cmp ebx, position[esi] ;third
je random_again1
jmp checking51

checking51:

mov esi, 4
mov ebx, position[esi] ;second
add esi, 8
cmp ebx, position[esi] ;fourth
je random_again1
jmp checking61

checking61:

mov esi, 8
mov ebx, position[esi] ;third
add esi, 4
cmp ebx, position[esi] ;fourth
je random_again1
jmp terminate1

terminate1:

display1:
mov ecx,half_word_length
mov esi,0
;call crlf

l11:
mov eax,position[esi]
;call writeint
add esi,4
loop l11
jmp next

NINE_LETTER_WORDS:
jmp EIGHT_LETTER_WORDS

TEN_LETTER_WORDS:

;1st and 2nd are same
check:
mov esi,0
mov ebx,position[esi]  ;first
add esi,4
cmp ebx,position[esi]  ;second
je random_again10
jmp check2

random_again10:
mov eax,lengthof string 
call randomrange
mov position[esi],eax
jmp check

check2:
mov esi,0
mov ebx,position[esi] ;first
add esi,8
cmp ebx,position[esi] ;third
je random_again10
jmp check3

check3:

mov esi,0
mov ebx,position[esi] ;first
add esi,12
cmp ebx,position[esi] ;fourth
je random_again10
jmp check4

check4:
mov esi,0
mov ebx,position[esi] ;first
add esi,16
cmp ebx,position[esi] ;fifth
je random_again10
jmp check5

check5:
mov esi,4
mov ebx,position[esi] ;second
add esi,4
cmp ebx,position[esi] ;third
je random_again10
jmp check7

check7:
mov esi,4
mov ebx,position[esi] ;second
add esi,8
cmp ebx,position[esi] ;fourth
je random_again10
jmp check8

check8:
mov esi,4
mov ebx,position[esi] ;second
add esi,12
cmp ebx,position[esi] ;fifth
je random_again10
jmp check9

check9:
mov esi,8
mov ebx,position[esi] ;third
add esi,4
cmp ebx,position[esi] ;fourth
je random_again10
jmp check10

check10:
mov esi,8
mov ebx,position[esi] ;third
add esi,8
cmp ebx,position[esi] ;fifth
je random_again10
jmp check11

check11:
mov esi,12
mov ebx,position[esi] ;fourth
add esi,4
cmp ebx,position[esi] ;fifth
je random_again10

jmp stop1

stop1:

display11:
mov ecx,half_word_length
mov esi,0
;call crlf

loop_l1:
mov eax,position[esi]
;call writeint
add esi,4
loop loop_l1
JMP NEXT


NEXT:

;inserting spaces at random positions
;CALL CRLF
mov ecx,half_word_length
mov bl,"_"
mov esi,0
mov ebx,0

ran_pos:
mov edi,position[esi]
;storing value at that position in edx

mov dl,temp_array[edi]
;moving that value to array store_val

mov store_val[edi],dl
mov temp_array[edi],"_"

add esi,4
add ebx,1
loop ran_pos


;checking which random letters are reaplaced by underscores


mov edx,offset store_val
;call writestring
;call crlf

;sorting position array
;//////////////////


mov ecx,HALF_WORD_LENGTH
LL3:
mov esi, OFFSET position
mov edi, OFFSET position+4
mov count, ecx
mov ecx, HALF_WORD_LENGTH
dec ecx
LL1:
mov eax, [esi]
mov ebx, [edi]
cmp eax, ebx
jle LESS
mov [esi], ebx
mov [edi], eax
LESS:
add esi, TYPE position
add edi, TYPE position
LOOP LL1
mov ecx, count
LOOP LL3

mov ecx, HALF_WORD_LENGTH
mov esi, OFFSET position
LL2:
mov eax, [esi]
;call WriteInt
;call Crlf
add esi, TYPE position
LOOP LL2

;////////////////////////////


;displaying msg

 mov esi,0
 mov ecx,HALF_WORD_LENGTH


IINPUT:
mov edx,offset msg
call writestring
call crlf
call crlf

mov edx,offset temp_array
call writestring
call crlf
call crlf

;taking input

mov temp,ecx     ;to restore value of terminating condition

mov ecx,WORD_LENGTH
mov edx,offset input
call readstring

mov ecx,temp

;checking if stores the input or not
;mov edx,offset input 
;call writestring
;call crlf
 
 mov edi,position[esi]  ;MOVING POSITION IN EDI
 mov al,store_val[edi]  ;STORED VALUE IN AL
 cmp input,al
 je insert
 jmp IINPUT

 insert:
 add esi,4
 dec ecx
 mov temp_array[edi],al
 mov edx,offset temp_array
 call writestring
 call crlf
 mov ebx,0
 cmp ecx,ebx
 je go
 jmp IINPUT


go:

mov edx,offset success
call writestring

exit
main endp
end main
INCLUDE Irvine32.inc

.data

success byte "Successfully matched the letters",0
random_index dword ?
index dword ?
temp_array byte 10 dup(?)
input byte 5 dup (?)
msg byte "Enter missing letter in the word",0 
position dword 5 dup(?)
loop_val dword ?
store_val byte 10 dup(?)
count dword ?
temp dword ?
WORD_LENGTH DWORD ?
t dword ?
half_word_length dword ?

string byte '^mizzly,'
       byte '^summerX,'
	   byte '^hellosX,'
	   byte '^acinusX,'
       byte '^ackees,'
       byte '^acnodeX,'
	   byte '^acornsX,'
	   byte '^acquit,'
	   byte '^acrossX,'
	   byte '^acting,'
	   byte '^actins,'
	   byte '^action,' 
	   byte '^yamalkas,'
	   byte '^yammered,'
	   byte '^yammererxx,',0 
	   byte '^ability,'
byte '^absence,'
byte '^academy,'
byte '^account,'
byte '^achieve,'
byte '^acquire,'
byte '^address,'
byte '^advance,'
byte '^advised,'
byte '^against,'
byte '^airport,'
byte '^already,'
byte '^ancient,'
byte '^another,'
byte '^anybody,'
byte '^balance,'
byte '^barrier,'
byte '^battery,'
byte '^because,'
byte '^bedroom,'
byte '^believe,'
byte '^beneath,'
byte '^benefit,'
byte '^besides,'
byte '^between,'
byte '^billion,'
byte '^binding,'
byte '^brother,'
byte '^brought,'
byte '^cabinet,'
byte '^caliber,'
byte '^capable,'
byte '^capital,'
byte '^captain,'
byte '^caption,'
byte '^capture,'
byte '^careful,'
byte '^carrier,'
byte '^caution,'
byte '^central,'
byte '^college,'
byte '^control,'
byte '^country,'
byte '^decline,'
byte '^default,'
byte '^defence,'
byte '^deficit,'
byte '^deliver,'
byte '^density,'
byte '^deposit,'
byte '^desktop,'
byte '^despite,'
byte '^destroy,'
byte '^develop,'
byte '^discuss,'
byte '^disease,'
byte '^display,'
byte '^dispute,'
byte '^distant,'
byte '^economy,'
byte '^edition,'
byte '^element,'
byte '^enhance,'
byte '^essence,'
byte '^expense,'
byte '^explain,'
byte '^explore,'
byte '^express,'
byte '^extreme,'
byte '^factory,'
byte '^faculty,'
byte '^failure,'
byte '^fashion,'
byte '^feature,'
byte '^federal,'
byte '^fiction,'
byte '^fifteen,'
byte '^finance,'
byte '^foreign,'
byte '^forever,'
byte '^gallery,'
byte '^gateway,'
byte '^general,'
byte '^genetic,'
byte '^genuine,'
byte '^greater,'
byte '^helpful,'
byte '^herself,'
byte '^highway,'
byte '^himself,'
byte '^history,'
byte '^holiday,'
byte '^however,'
byte '^illegal,'
byte '^imagine,'
byte '^improve,'
byte '^include,'
byte '^initial,'
byte '^insight,'
byte '^install,'
byte '^involve,'
byte '^journal,'
byte '^journey,'
byte '^justice,'
byte '^justify,'
byte '^kingdom,'
byte '^kitchen,'
byte '^leisure,'
byte '^liberal,'
byte '^liberty,'
byte '^library,'
byte '^license,'
byte '^machine,'
byte '^manager,'
byte '^married,'
byte '^massive,'
byte '^maximum,'
byte '^mission,'
byte '^natural,'
byte '^nervous,'
byte '^network,'
byte '^neutral,'
byte '^nowhere,'
byte '^obvious,'
byte '^offense,'
byte '^officer,'
byte '^outdoor,'
byte '^outside,'
byte '^overall,'
byte '^package,'
byte '^partial,'
byte '^partner,'
byte '^passage,'
byte '^passion,'
byte '^passive,'
byte '^perfect,'
byte '^perform,'
byte '^quality,'
byte '^quarter,'
byte '^respect,'
byte '^restore,'
byte '^reverse,'
byte '^routine,'
byte '^silence,'
byte '^storage,'
byte '^student,'
byte '^success,'
byte '^support,'
byte '^traffic,'
byte '^trouble,'
byte '^typical,'
byte '^uniform,'
byte '^upgrade,'
byte '^utility,'
byte '^village,'
byte '^violent,'
byte '^virtual,'
byte '^visible,'
byte '^without,'
byte '^witness,'
byte '^actually,'
byte '^addition,'
byte '^adjusted,'
byte '^advanced,'
byte '^advisory,'
byte '^advocate,'
byte '^approach,'
byte '^approval,'
byte '^argument,'
byte '^artistic,'
byte '^assembly,'
byte '^ttitude,'
byte '^audience,'
byte '^bacteria,'
byte '^baseball,'
byte '^birthday,'
byte '^boundary,'
byte '^building,'
byte '^business,'
byte '^clinical,'
byte '^consider,'
byte '^continue,'
byte '^creation,'
byte '^creative,'
byte '^cultural,'
byte '^customer,'
byte '^database,'
byte '^daughter,'
byte '^decrease,'
byte '^definite,'
byte '^describe,'
byte '^dialogue,'
byte '^equality,'
byte '^everyday,'
byte '^everyone,'
byte '^exchange,'
byte '^exercise,'
byte '^external,'
byte '^feedback,'
byte '^festival,'
byte '^football,'
byte '^fourteen,'
byte '^fraction,'
byte '^frequent,'
byte '^function,'
byte '^governor,'
byte '^graduate,'
byte '^graphics,'
byte '^grateful,'
byte '^guardian,'
byte '^guidance,'
byte '^hardware,'
byte '^heritage,'
byte '^highland,'
byte '^historic,'
byte '^homepage,'
byte '^hospital,'
byte '^humanity,'
byte '^innocent,'
byte '^interact,'
byte '^interest,'
byte '^interior,'
byte '^internal,'
byte '^interval,'
byte '^judgment,'
byte '^judicial,'
byte '^junction,'
byte '^keyboard,'
byte '^landlord,'
byte '^language,'
byte '^laughter,'
byte '^lifetime,'
byte '^likewise,'
byte '^literary,'
byte '^location,'
byte '^maintain,'
byte '^majority,'
byte '^marginal,'
byte '^medicine,'
byte '^midnight,'
byte '^movement,'
byte '^multiple,'
byte '^national,'
byte '^negative,'
byte '^nineteen,'
byte '^northern,'
byte '^notebook,'
byte '^numerous,'
byte '^observer,'
byte '^occasion,'
byte '^operator,'
byte '^opponent,'
byte '^opposite,'
byte '^optional,'
byte '^position,'
byte '^positive,'
byte '^possible,'
byte '^presence,'
byte '^pressure,'
byte '^previous,'
byte '^priority,'
byte '^property,'
byte '^quantity,'
byte '^question,'
byte '^reaction,'
byte '^religion,'
byte '^research,'
byte '^resource,'
byte '^response,'
byte '^revision,'
byte '^schedule,'
byte '^security,'
byte '^software,'
byte '^solution,'
byte '^somebody,'
byte '^surprise,'
byte '^tactical,'
byte '^takeover,'
byte '^together,'
byte '^tomorrow,'
byte '^transfer,'
byte '^triangle,'
byte '^ultimate,'
byte '^umbrella,'
byte '^universe,'
byte '^unlawful,'
byte '^unlikely,'
byte '^valuable,'
byte '^variable,'
byte '^vertical,'
byte '^victoria,'
byte '^violence,'
byte '^volatile,'
byte '^warranty,'
byte '^whatever,'
byte '^wildlife,'
byte '^wireless,'
byte '^withdraw,'
byte '^workshop,'
byte '^yourself,'
Byte '^razzmatazz,'
Byte '^bumfuzzled,'
Byte '^bumfuzzles,'
Byte '^whizzbangs,'
Byte '^bemuzzling,'
Byte '^puzzlingly,'
Byte '^unpuzzling,'
Byte '^embezzling,'
Byte '^unmuzzling,'
Byte '^zigzagging,'
Byte '^puzzlement,'
Byte '^scuzzballs,'
Byte '^dizzyingly,'
Byte '^blackjacks,'
Byte '^blizzardly,'
Byte '^bedazzling,'
Byte '^dazzlingly,'
Byte '^pozzolanic,'
Byte '^crackajack,'
Byte '^showbizzes,'
Byte '^mizzenmast,'
Byte '^kolkhoznik,'
Byte '^schnozzles,'
Byte '^skyjacking,'
Byte '^embezzlers,'
Byte '^jackknifed,'
Byte '^jackknives,'
Byte '^kibbutznik,'
Byte '^japanizing,'
Byte '^sorosises,'
Byte '^toastiest,'
Byte '^titterers,'
Byte '^tortoises,'
Byte '^terrorise,'
Byte '^sitarists,'
Byte '^testators,'
Byte '^aerostats,'
Byte '^terrorist,'
Byte '^troostite,'
Byte '^esterases,'
Byte '^jarovizin,'
Byte '^cheapjacks,'
Byte '^equivoques,'
Byte '^lumberjack,'
Byte '^zigzaggers,'
Byte '^supplejack,'
Byte '^knickknack,'
Byte '^kickboxing,'
Byte '^podzolized,'
Byte '^mezzalunas,'
Byte '^jackknifes,'
Byte '^jackhammer,'
Byte '^pozzolanas,'
Byte '^highjacked,'
Byte '^mozzarella,'
Byte '^squeezable,'
Byte '^applejacks,'
Byte '^bejumbling,'
Byte '^zombifying,'
Byte '^quantizing,'
Byte '^smokejacks,'
Byte '^podzolizes,'
Byte '^schizziest,'
Byte '^quincunxes,'
Byte '^zygomorphy,'
Byte '^equalizing,'
Byte '^mezzanines,'
Byte '^joypopping,'
Byte '^quartzitic,'
Byte '^oxygenized,'
Byte '^muckamucks,'
Byte '^frizziness,'
Byte '^maximizers,'
Byte '^sjamboking,'
Byte '^frizzliest,'
Byte '^intermezzo,'
Byte '^intermezzi,'
Byte '^liquidized,'
Byte '^quadplexes,'
Byte '^jacqueries,'
Byte '^quillbacks,'
Byte '^complexify,'
Byte '^amberjacks,'
Byte '^jargonized,'
Byte '^exchequers,'
Byte '^jaywalking,'
Byte '^blackbucks,'
Byte '^exorcizing,'
Byte '^jeopardize,'
Byte '^exoenzymes,'
Byte '^subjacency,'
Byte '^jackscrews,'
Byte '^jackrabbit,'
Byte '^johnnycake,'
Byte '^carjacking,'
Byte '^kibbitzing,'
Byte '^mezzotints,'
Byte '^chiffchaff,'
Byte '^outdazzled,'
Byte '^zinkifying,'
Byte '^skyjackers,'
Byte '^quizmaster,'
Byte '^backchecks,'
Byte '^epoxidized,'
Byte '^flummoxing,'
Byte '^jackplanes,'
Byte '^czarevitch,'
Byte '^jacklights,'
Byte '^oxidizable,'
Byte '^circumflex,'
Byte '^pizzazzes,'
Byte '^quizzical,'
Byte '^bumfuzzle,'
Byte '^whizzbang,'
Byte '^showbizzy,'
Byte '^buzzingly,'
Byte '^jazziness,'
Byte '^chazzenim,'
Byte '^chazzanim,'
Byte '^bemuzzled,'
Byte '^scuzzball,'
Byte '^zugzwangs,'
Byte '^blackjack,'
Byte '^puzzledly,'
Byte '^bemuzzles,'
Byte '^unpuzzled,'
Byte '^embezzled,'
Byte '^pizzalike,'
Byte '^unmuzzled,'
Byte '^huzzahing,'
Byte '^buzzwords,'
Byte '^frizzling,'
Byte '^unpuzzles,'
Byte '^embezzles,'
Byte '^schnozzle,'
Byte '^unmuzzles,'
Byte '^zigzagged,'
Byte '^blizzardy,'
Byte '^swizzling,'
Byte '^frazzling,'
Byte '^embezzler,'
Byte '^zigzagger,'
Byte '^mezzaluna,'
Byte '^equivoque,'
Byte '^bedazzled,'
Byte '^jipijapas,'
Byte '^schnozzes,'
Byte '^jackknife,'
Byte '^cheapjack,'
Byte '^jukeboxes,'
Byte '^pizzicati,'
Byte '^pizzicato,'
Byte '^grizzling,'
Byte '^paparazzi,'
Byte '^paparazzo,'
Byte '^maximized,'
Byte '^schizzier,'
Byte '^pozzolans,'
Byte '^krummholz,'
Byte '^jarovized,'
Byte '^podzolize,'
Byte '^pozzolana,'
Byte '^kibbutzim,'
Byte '^fuzztones,'
Byte '^pizzelles,'
Byte '^whizziest,'
Byte '^fuzziness,'
Byte '^applejack,'
Byte '^razzberry,'
Byte '^jampacked,'
Byte '^smokejack,'
Byte '^drizzling,'
Byte '^muzziness,'
Byte '^skipjacks,'
Byte '^blizzards,'
Byte '^skyjacked,'
Byte '^banjaxing,'
Byte '^bedazzles,'
Byte '^jacquards,'
Byte '^flapjacks,'
Byte '^mezzanine,'
Byte '^japanized,'
Byte '^blackbuck,'
Byte '^mezzotint,'
Byte '^swizzlers,'
Byte '^mezquites,'
Byte '^oxazepams,'
Byte '^frizzlier,'
Byte '^backcheck,'
Byte '^zabajones,'
Byte '^kickboxed,'
Byte '^squeezing,'
Byte '^frizzlers,'
Byte '^quillback,'
Byte '^zwiebacks,'
Byte '^ozonizing,'
Byte '^scuzziest,'
Byte '^exchequer,'
Byte '^muckamuck,'
Byte '^coxcombic,'
Byte '^highjacks,'
Byte '^jacquerie,'
Byte '^maximizer,'
Byte '^jarovizes,'
Byte '^maximizes,'
Byte '^skyjacker,'
Byte '^jackscrew,'
Byte '^jumpingly,'
Byte '^albizzias,'
Byte '^exoenzyme,'
Byte '^attesters,'
Byte '^irritator,'
Byte '^attestors,'
Byte '^reiterate,'
Byte '^satieties,'
Byte '^irritates,'
Byte '^straitest,'
Byte '^assessors,'
Byte '^assisters,'
Byte '^assistors,'
Byte '^assorters,'
Byte '^satirises,'
Byte '^satirists,'
Byte '^reassorts,'
Byte '^reasserts,'
Byte '^sestertia,'
Byte '^rearrests,'
Byte '^seeresses,'
Byte '^teataster,'
Byte '^traitress,'
Byte '^tattooers,'
Byte '^tressiest,'
Byte '^tattooist,'
Byte '^assertors,'
Byte '^asserters,'
Byte '^trattorie,'
Byte '^retorters,'
Byte '^retreater,'
Byte '^resistors,'
Byte '^resisters,'
Byte '^trattoria,'
Byte '^ostosises,'
Byte '^restorers,'
Byte '^orrisroot,'
Byte '^ostiaries,'
Byte '^resorters,'
Byte '^stressors,'
Byte '^arrestees,'
Byte '^rotatores,'
Byte '^oratorios,'
Byte '^oratories,'
Byte '^treatises,'
Byte '^roseroots,'
Byte '^roisterer,'
Byte '^arresters,'
Byte '^arrestors,'
Byte '^resetters,'
Byte '^arteritis,'
Byte '^steatites,'
Byte '^tartrates,'
Byte '^sororates,'
Byte '^titrators,'
Byte '^totterers,'
Byte '^starriest,'
Byte '^stearates,'
Byte '^antistate,'
Byte '^titanates,'
Byte '^interests,'
Byte '^tolerator,'
Byte '^narraters,'
Byte '^tiltrotor,'
Byte '^insisters,'
Byte '^intarsias,'
Byte '^interiors,'
Byte '^antistats,'
Byte '^irritated,'
Byte '^toilettes,'
Byte '^reseasons,'
Byte '^irateness,'
Byte '^toadeater,'
Byte '^irritants,'
Byte '^insetters,'
Byte '^tolerates,'
Byte '^irradiate,'
Byte '^intestate,'
Byte '^titanites,'
Byte '^titration,'
Byte '^interties,'
Byte '^resettles,'
Byte '^resonator,'
Byte '^totalists,'
Byte '^resonates,'
Byte '^totalises,'
Byte '^torturers,'
Byte '^stutterer,'
Byte '^strutters,'
Byte '^adroitest,'
Byte '^restorals,'
Byte '^touristas,',0 ;616



.code
main proc


mov eax,lengthof string
mov ebx,616
mul ebx
call randomize
call randomrange
;call writeint
mov random_index,eax
mov esi, random_index

lab:cmp string[esi],'^'
je stop
dec esi
jmp lab


;mov edx,offset string+7
;call writestring

stop :
;call crlf
mov eax,esi
;call writeint
;call crlf
mov index,esi
;index having starting index of some random word

mov edi,0
mov ebx,index

Fetch_word:

inc ebx
cmp string[ebx],','
je word_fetched
mov al,string[ebx]
mov temp_array[edi],al
inc edi
jmp Fetch_word

word_fetched:

MOV word_length,edi
mov edx,offset temp_array
call writestring
call crlf
call crlf

;finding half of length of word

mov edx,0
mov eax,word_length
;CALL CRLF
;CALL WRITEINT
;CALL CRLF
mov ebx,2   ;;to get half length
div ebx

mov half_word_length,eax
mov  ecx,eax
mov loop_val,ecx  ;loopval contains no of guesses
;call dumpregs
mov esi,0

;generating random numbers for random spaces

call randomize

l:
mov eax,word_length
call randomrange
;call writeint
mov position[esi],eax
add esi,4
loop l

;call crlf

;checking wether random numbers are equal

CMP WORD_LENGTH,6
JE SIX_LETTER_WORDS
cmp WORD_LENGTH,7
JE SEVEN_LETTER_WORDS
cmp WORD_LENGTH,8
JE EIGHT_LETTER_WORDS
cmp WORD_LENGTH,9
JE NINE_LETTER_WORDS
cmp WORD_LENGTH,10
JE TEN_LETTER_WORDS



SIX_LETTER_WORDS:


;case1:comparing first 2 if equal

checking:
mov esi,0
mov ebx,position[esi]
add esi,4
cmp ebx,position[esi]
je random_again
jmp checking2

;jmp terminate

random_again:
mov eax,WORD_LENGTH
call randomrange
mov position[esi],eax
jmp checking



;case2:comparing last 2 if same

checking2:
mov esi, 4
mov ebx,position[esi]  ;second last val
add esi, 4
cmp ebx,position[esi]  ;last val
je random_again
jmp checking3


checking3:

mov esi,0
mov ebx,position[esi]   ;first
add esi,8
cmp ebx,position[esi]   ;last
je random_again
jmp terminate

terminate:

display:
mov ecx,half_word_length
mov esi,0
call crlf

l1:
mov eax,position[esi]
;call writeint
add esi,4
loop l1
JMP NEXT

SEVEN_LETTER_WORDS:
JMP SIX_LETTER_WORDS


EIGHT_LETTER_WORDS:
;case1:comparing first two if equal
checking1:
mov esi,0
mov ebx,position[esi]
add esi,4
cmp ebx,position[esi]
je random_again1
jmp checking21

random_again1:
mov eax,lengthof string 
call randomrange
mov position[esi],eax
jmp checking1

;case2:comparing last 2 if same

checking21:
mov esi, 0
mov ebx, position[esi] ;first
add esi, 8
cmp ebx, position[esi] ;third
je random_again1
jmp checking31


checking31:

mov esi,0
mov ebx,position[esi]   ;first
add esi, 12
cmp ebx,position[esi]   ;fourth
je random_again1
jmp checking41

checking41:

mov esi, 4
mov ebx, position[esi] ;second
add esi, 4
cmp ebx, position[esi] ;third
je random_again1
jmp checking51

checking51:

mov esi, 4
mov ebx, position[esi] ;second
add esi, 8
cmp ebx, position[esi] ;fourth
je random_again1
jmp checking61

checking61:

mov esi, 8
mov ebx, position[esi] ;third
add esi, 4
cmp ebx, position[esi] ;fourth
je random_again1
jmp terminate1

terminate1:

display1:
mov ecx,half_word_length
mov esi,0
;call crlf

l11:
mov eax,position[esi]
;call writeint
add esi,4
loop l11
jmp next

NINE_LETTER_WORDS:
jmp EIGHT_LETTER_WORDS

TEN_LETTER_WORDS:

;1st and 2nd are same
check:
mov esi,0
mov ebx,position[esi]  ;first
add esi,4
cmp ebx,position[esi]  ;second
je random_again10
jmp check2

random_again10:
mov eax,lengthof string 
call randomrange
mov position[esi],eax
jmp check

check2:
mov esi,0
mov ebx,position[esi] ;first
add esi,8
cmp ebx,position[esi] ;third
je random_again10
jmp check3

check3:

mov esi,0
mov ebx,position[esi] ;first
add esi,12
cmp ebx,position[esi] ;fourth
je random_again10
jmp check4

check4:
mov esi,0
mov ebx,position[esi] ;first
add esi,16
cmp ebx,position[esi] ;fifth
je random_again10
jmp check5

check5:
mov esi,4
mov ebx,position[esi] ;second
add esi,4
cmp ebx,position[esi] ;third
je random_again10
jmp check7

check7:
mov esi,4
mov ebx,position[esi] ;second
add esi,8
cmp ebx,position[esi] ;fourth
je random_again10
jmp check8

check8:
mov esi,4
mov ebx,position[esi] ;second
add esi,12
cmp ebx,position[esi] ;fifth
je random_again10
jmp check9

check9:
mov esi,8
mov ebx,position[esi] ;third
add esi,4
cmp ebx,position[esi] ;fourth
je random_again10
jmp check10

check10:
mov esi,8
mov ebx,position[esi] ;third
add esi,8
cmp ebx,position[esi] ;fifth
je random_again10
jmp check11

check11:
mov esi,12
mov ebx,position[esi] ;fourth
add esi,4
cmp ebx,position[esi] ;fifth
je random_again10

jmp stop1

stop1:

display11:
mov ecx,half_word_length
mov esi,0
;call crlf

loop_l1:
mov eax,position[esi]
;call writeint
add esi,4
loop loop_l1
JMP NEXT


NEXT:

;inserting spaces at random positions
;CALL CRLF
mov ecx,half_word_length
mov bl,"_"
mov esi,0
mov ebx,0

ran_pos:
mov edi,position[esi]
;storing value at that position in edx

mov dl,temp_array[edi]
;moving that value to array store_val

mov store_val[edi],dl
mov temp_array[edi],"_"

add esi,4
add ebx,1
loop ran_pos


;checking which random letters are reaplaced by underscores


mov edx,offset store_val
;call writestring
;call crlf

;sorting position array
;//////////////////


mov ecx,HALF_WORD_LENGTH
LL3:
mov esi, OFFSET position
mov edi, OFFSET position+4
mov count, ecx
mov ecx, HALF_WORD_LENGTH
dec ecx
LL1:
mov eax, [esi]
mov ebx, [edi]
cmp eax, ebx
jle LESS
mov [esi], ebx
mov [edi], eax
LESS:
add esi, TYPE position
add edi, TYPE position
LOOP LL1
mov ecx, count
LOOP LL3

mov ecx, HALF_WORD_LENGTH
mov esi, OFFSET position
LL2:
mov eax, [esi]
;call WriteInt
;call Crlf
add esi, TYPE position
LOOP LL2

;////////////////////////////


;displaying msg

 mov esi,0
 mov ecx,HALF_WORD_LENGTH


IINPUT:
mov edx,offset msg
call writestring
call crlf
call crlf

mov edx,offset temp_array
call writestring
call crlf
call crlf

;taking input

mov temp,ecx     ;to restore value of terminating condition

mov ecx,WORD_LENGTH
mov edx,offset input
call readstring

mov ecx,temp

;checking if stores the input or not
;mov edx,offset input 
;call writestring
;call crlf
 
 mov edi,position[esi]  ;MOVING POSITION IN EDI
 mov al,store_val[edi]  ;STORED VALUE IN AL
 cmp input,al
 je insert
 jmp IINPUT

 insert:
 add esi,4
 dec ecx
 mov temp_array[edi],al
 mov edx,offset temp_array
 call writestring
 call crlf
 mov ebx,0
 cmp ecx,ebx
 je go
 jmp IINPUT


go:

mov edx,offset success
call writestring

exit
main endp
end main